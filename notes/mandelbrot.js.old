
public int testPoint(double real, double imaginary){
  int escapeNumber = 0;
  double zr = 0; double zi = 0;
  double r, i;
  while (escapeNumber < MAXITER){
    escapeNumber++;
    r = zr; i = zi;
    if ((r*r + i*i) < ESCAPEBOUNDRY){
      zr = r*r - i*i + real;
      zi = 2*r*i + imaginary;
    }else
      return escapeNumber;//point outside set
  }return 0;//point inside set
}

function isMember(real, imag) {
  let [zr, zi, distance, escape] = [0, 0, 0, 0]
  while (escape++ < LIMIT && distance < BOUNDARY) {
    [zr, zi] = [zr*zr - zi*zi + real, 2*zr*zi + imaginary]
    distance = zr*zr + zi*zi
  }
  return distance < BOUNDARY
}

IS_MEMBER = 0 0 0 0 1 [ IS_MEMBER' ] GET_DISTANCE LIMIT LT

REAL IMAG ZR ZI DISTANCE ESCAPE IS_MEMBER' = REAL IMAG ((ZR SQ) (ZI SQ) - REAL +) (2 ZR ZI MULT MULT IMAG +) (ZR SQ ZI SQ +) (ESCAPE INCR) continue? ((ESCAPE LIMIT LT) (DISTANCE BOUNDARY LT) AND)
_ _ _ _ DISTANCE _ GET_DISTANCE = DISTANCE


-1717986918
-3006477107
